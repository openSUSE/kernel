// SPDX-License-Identifier: GPL-2.0
//
// Send a RST to a TFO socket after it is accepted.
//
// The socket will change to TCP_CLOSE state with pending data so
// write() will fail. Pending data can be still be read and close()
// won't trigger RST if data is not read
//
// 565b7b2d2e63 ("tcp: do not send reset to already closed sockets")
// https://lore.kernel.org/netdev/4C1A2502.1030502@openvz.org/

`./defaults.sh`

    0 socket(..., SOCK_STREAM|SOCK_NONBLOCK, IPPROTO_TCP) = 3
   +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0
   +0 setsockopt(3, SOL_TCP, TCP_FASTOPEN, [1], 4) = 0

   +0 < S 0:10(10) win 32792 <mss 1460,sackOK,nop,nop, FO TFO_COOKIE,nop,nop>
   +0 > S. 0:0(0) ack 11 <mss 1460,nop,nop,sackOK>

   +0 accept(3, ..., ...) = 4
   +0 %{ assert (tcpi_options & TCPI_OPT_SYN_DATA) != 0, tcpi_options }%
   +0 %{ assert tcpi_state == TCP_SYN_RECV, tcpi_state }%

// tcp_done() sets sk->sk_state to TCP_CLOSE and clears tp->fastopen_rsk
   +0 < R. 11:11(0) win 32792
   +0 %{ assert tcpi_state == TCP_CLOSE, tcpi_state }%

   +0 write(4, ..., 100) = -1 ECONNRESET(Connection reset by peer)
   +0 close(4) = 0
